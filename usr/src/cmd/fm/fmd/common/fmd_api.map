#
# CDDL HEADER START
#
# The contents of this file are subject to the terms of the
# Common Development and Distribution License (the "License").
# You may not use this file except in compliance with the License.
#
# You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE
# or http://www.opensolaris.org/os/licensing.
# See the License for the specific language governing permissions
# and limitations under the License.
#
# When distributing Covered Code, include this CDDL HEADER in each
# file and include the License file at usr/src/OPENSOLARIS.LICENSE.
# If applicable, add the following below this CDDL HEADER, with the
# fields enclosed by brackets "[]" replaced with your own identifying
# information: Portions Copyright [yyyy] [name of copyright owner]
#
# CDDL HEADER END
#
# Copyright 2009 Sun Microsystems, Inc.  All rights reserved.
# Use is subject to license terms.
#

{
	fmd_buf_create = FUNCTION extern;
	fmd_buf_destroy = FUNCTION extern;
	fmd_buf_read = FUNCTION extern;
	fmd_buf_size = FUNCTION extern;
	fmd_buf_write = FUNCTION extern;

	fmd_case_add_ereport = FUNCTION extern;
	fmd_case_add_serd = FUNCTION extern;
	fmd_case_add_suspect = FUNCTION extern;
	fmd_case_close = FUNCTION extern;
	fmd_case_closed = FUNCTION extern;
	fmd_case_getprincipal = FUNCTION extern;
	fmd_case_getspecific = FUNCTION extern;
	fmd_case_next = FUNCTION extern;
	fmd_case_open = FUNCTION extern;
	fmd_case_prev = FUNCTION extern;
	fmd_case_reset = FUNCTION extern;
	fmd_case_setprincipal = FUNCTION extern;
	fmd_case_setspecific = FUNCTION extern;
	fmd_case_solve = FUNCTION extern;
	fmd_case_solved = FUNCTION extern;
	fmd_case_uuclose = FUNCTION extern;
	fmd_case_uuclosed = FUNCTION extern;
	fmd_case_uuid = FUNCTION extern;
	fmd_case_uulookup = FUNCTION extern;
	fmd_case_uuresolved = FUNCTION extern;

	fmd_event_local = FUNCTION extern;
	fmd_event_ena_create = FUNCTION extern;

	fmd_hdl_abort = FUNCTION extern;
	fmd_hdl_alloc = FUNCTION extern;
	fmd_hdl_debug = FUNCTION extern;
	fmd_hdl_error = FUNCTION extern;
	fmd_hdl_free = FUNCTION extern;
	fmd_hdl_getspecific = FUNCTION extern;
	fmd_hdl_opendict = FUNCTION extern;
	fmd_hdl_register = FUNCTION extern;
	fmd_hdl_setspecific = FUNCTION extern;
	fmd_hdl_strdup = FUNCTION extern;
	fmd_hdl_strfree = FUNCTION extern;
	fmd_hdl_subscribe = FUNCTION extern;
	fmd_hdl_topo_hold = FUNCTION extern;
	fmd_hdl_topo_rele = FUNCTION extern;
	fmd_hdl_unregister = FUNCTION extern;
	fmd_hdl_unsubscribe = FUNCTION extern;
	fmd_hdl_vabort = FUNCTION extern;
	fmd_hdl_vdebug = FUNCTION extern;
	fmd_hdl_verror = FUNCTION extern;
	fmd_hdl_zalloc = FUNCTION extern;

	fmd_nvl_alloc = FUNCTION extern;
	fmd_nvl_class_match = FUNCTION extern;
	fmd_nvl_create_fault = FUNCTION extern;
	fmd_nvl_dup = FUNCTION extern;
	fmd_nvl_fmri_expand = FUNCTION extern;
	fmd_nvl_fmri_present = FUNCTION extern;
	fmd_nvl_fmri_replaced = FUNCTION extern;
	fmd_nvl_fmri_unusable = FUNCTION extern;
	fmd_nvl_fmri_retire = FUNCTION extern;
	fmd_nvl_fmri_unretire = FUNCTION extern;
	fmd_nvl_fmri_service_state = FUNCTION extern;
	fmd_nvl_fmri_has_fault = FUNCTION extern;
	fmd_nvl_fmri_contains = FUNCTION extern;
	fmd_nvl_fmri_translate = FUNCTION extern;

	fmd_prop_free_string = FUNCTION extern;
	fmd_prop_get_int32 = FUNCTION extern;
	fmd_prop_get_int64 = FUNCTION extern;
	fmd_prop_get_string = FUNCTION extern;

	fmd_repair_fru = FUNCTION extern;
	fmd_repair_asru = FUNCTION extern;

	fmd_serd_create = FUNCTION extern;
	fmd_serd_destroy = FUNCTION extern;
	fmd_serd_exists = FUNCTION extern;
	fmd_serd_fired = FUNCTION extern;
	fmd_serd_reset = FUNCTION extern;
	fmd_serd_record = FUNCTION extern;
	fmd_serd_empty = FUNCTION extern;

	fmd_stat_create = FUNCTION extern;
	fmd_stat_destroy = FUNCTION extern;
	fmd_stat_setstr = FUNCTION extern;

	fmd_thr_create = FUNCTION extern;
	fmd_thr_destroy = FUNCTION extern;
	fmd_thr_signal = FUNCTION extern;
	fmd_thr_checkpoint = FUNCTION extern;

	fmd_timer_install = FUNCTION extern;
	fmd_timer_remove = FUNCTION extern;

	fmd_xprt_close = FUNCTION extern;
	fmd_xprt_error = FUNCTION extern;
	fmd_xprt_getspecific = FUNCTION extern;
	fmd_xprt_log = FUNCTION extern;
	fmd_xprt_open = FUNCTION extern;
	fmd_xprt_post = FUNCTION extern;
	fmd_xprt_resume = FUNCTION extern;
	fmd_xprt_setspecific = FUNCTION extern;
	fmd_xprt_suspend = FUNCTION extern;
	fmd_xprt_translate = FUNCTION extern;
	fmd_xprt_add_domain = FUNCTION extern;
};
