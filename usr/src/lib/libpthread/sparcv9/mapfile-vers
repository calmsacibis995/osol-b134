#
# CDDL HEADER START
#
# The contents of this file are subject to the terms of the
# Common Development and Distribution License (the "License").
# You may not use this file except in compliance with the License.
#
# You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE
# or http://www.opensolaris.org/os/licensing.
# See the License for the specific language governing permissions
# and limitations under the License.
#
# When distributing Covered Code, include this CDDL HEADER in each
# file and include the License file at usr/src/OPENSOLARIS.LICENSE.
# If applicable, add the following below this CDDL HEADER, with the
# fields enclosed by brackets "[]" replaced with your own identifying
# information: Portions Copyright [yyyy] [name of copyright owner]
#
# CDDL HEADER END
#
# Copyright 2009 Sun Microsystems, Inc.  All rights reserved.
# Use is subject to license terms.
#

#
# MAPFILE HEADER START
#
# WARNING:  STOP NOW.  DO NOT MODIFY THIS FILE.
# Object versioning must comply with the rules detailed in
#
#	usr/src/lib/README.mapfiles
#
# You should not be making modifications here until you've read the most current
# copy of that file. If you need help, contact a gatekeeper for guidance.
#
# MAPFILE HEADER END
#

#
# DO NOT TOUCH THIS FILE.
# This file declares interfaces that are cast in stone.
# They offer interfaces that will never change.
# DO NOT TOUCH THIS FILE.
#

SUNW_1.4 {
    global:
	pthread_cond_reltimedwait_np = FUNCTION;
	cond_reltimedwait = FUNCTION;
    local:
	*;
} SUNW_1.3;

SUNW_1.3 {
    global:
	pthread_mutexattr_setrobust_np = FUNCTION;
	pthread_mutexattr_getrobust_np = FUNCTION;
	pthread_mutex_consistent_np = FUNCTION;
} SUNW_1.2;

SUNW_1.2 {
    global:
	pthread_attr_getguardsize = FUNCTION;
	pthread_attr_setguardsize = FUNCTION;
	pthread_getconcurrency = FUNCTION;
	pthread_mutexattr_gettype = FUNCTION;
	pthread_mutexattr_settype = FUNCTION;
	pthread_rwlock_destroy = FUNCTION;
	pthread_rwlock_init = FUNCTION;
	pthread_rwlock_rdlock = FUNCTION;
	pthread_rwlock_tryrdlock = FUNCTION;
	pthread_rwlock_trywrlock = FUNCTION;
	pthread_rwlock_unlock = FUNCTION;
	pthread_rwlock_wrlock = FUNCTION;
	pthread_rwlockattr_destroy = FUNCTION;
	pthread_rwlockattr_getpshared = FUNCTION;
	pthread_rwlockattr_init = FUNCTION;
	pthread_rwlockattr_setpshared = FUNCTION;
	pthread_setconcurrency = FUNCTION;
	__xpg4_putmsg = FUNCTION;
	__xpg4_putpmsg = FUNCTION;
	getmsg = FUNCTION;
	getpmsg = FUNCTION;
	lockf = FUNCTION;
	msgrcv = FUNCTION;
	msgsnd = FUNCTION;
	poll = FUNCTION;
	putmsg = FUNCTION;
	putpmsg = FUNCTION;
	select = FUNCTION;
	sigpause = FUNCTION;
	usleep = FUNCTION;
	wait3 = FUNCTION;
	waitid = FUNCTION;
	pread = FUNCTION;
	pwrite = FUNCTION;
	readv = FUNCTION;
	writev = FUNCTION;
} SUNW_1.1;

SUNW_1.1 {
    global:
	SUNW_1.1;
} SUNW_0.9;

SUNW_0.9 {
    global:
	pthread_attr_destroy = FUNCTION;
	pthread_attr_getdetachstate = FUNCTION;
	pthread_attr_getinheritsched = FUNCTION;
	pthread_attr_getschedparam = FUNCTION;
	pthread_attr_getschedpolicy = FUNCTION;
	pthread_attr_getscope = FUNCTION;
	pthread_attr_getstackaddr = FUNCTION;
	pthread_attr_getstacksize = FUNCTION;
	pthread_attr_init = FUNCTION;
	pthread_attr_setdetachstate = FUNCTION;
	pthread_attr_setinheritsched = FUNCTION;
	pthread_attr_setschedparam = FUNCTION;
	pthread_attr_setschedpolicy = FUNCTION;
	pthread_attr_setscope = FUNCTION;
	pthread_attr_setstackaddr = FUNCTION;
	pthread_attr_setstacksize = FUNCTION;
	pthread_cancel = FUNCTION;
	__pthread_cleanup_pop = FUNCTION;
	__pthread_cleanup_push = FUNCTION;
	pthread_cond_broadcast = FUNCTION;
	pthread_cond_destroy = FUNCTION;
	pthread_cond_init = FUNCTION;
	pthread_cond_signal = FUNCTION;
	pthread_cond_timedwait = FUNCTION;
	pthread_cond_wait = FUNCTION;
	pthread_condattr_destroy = FUNCTION;
	pthread_condattr_getpshared = FUNCTION;
	pthread_condattr_init = FUNCTION;
	pthread_condattr_setpshared = FUNCTION;
	pthread_create = FUNCTION;
	pthread_detach = FUNCTION;
	pthread_equal = FUNCTION;
	pthread_exit = FUNCTION;
	pthread_getschedparam = FUNCTION;
	pthread_getspecific = FUNCTION;
	pthread_join = FUNCTION;
	pthread_key_create = FUNCTION;
	pthread_key_delete = FUNCTION;
	pthread_kill = FUNCTION;
	pthread_mutex_destroy = FUNCTION;
	pthread_mutex_getprioceiling = FUNCTION;
	pthread_mutex_init = FUNCTION;
	pthread_mutex_lock = FUNCTION;
	pthread_mutex_setprioceiling = FUNCTION;
	pthread_mutex_trylock = FUNCTION;
	pthread_mutex_unlock = FUNCTION;
	pthread_mutexattr_destroy = FUNCTION;
	pthread_mutexattr_getprioceiling = FUNCTION;
	pthread_mutexattr_getprotocol = FUNCTION;
	pthread_mutexattr_getpshared = FUNCTION;
	pthread_mutexattr_init = FUNCTION;
	pthread_mutexattr_setprioceiling = FUNCTION;
	pthread_mutexattr_setprotocol = FUNCTION;
	pthread_mutexattr_setpshared = FUNCTION;
	pthread_once = FUNCTION;
	pthread_self = FUNCTION;
	pthread_setcancelstate = FUNCTION;
	pthread_setcanceltype = FUNCTION;
	pthread_setschedparam = FUNCTION;
	pthread_setspecific = FUNCTION;
	pthread_sigmask = FUNCTION;
	pthread_testcancel = FUNCTION;
	alarm = FUNCTION;
	close = FUNCTION;
	cond_broadcast = FUNCTION;
	cond_destroy = FUNCTION;
	cond_init = FUNCTION;
	cond_signal = FUNCTION;
	cond_timedwait = FUNCTION;
	cond_wait = FUNCTION;
	creat = FUNCTION;
	fcntl = FUNCTION;
	fork = FUNCTION;
	fork1 = FUNCTION;
	fsync = FUNCTION;
	msync = FUNCTION;
	mutex_destroy = FUNCTION;
	mutex_init = FUNCTION;
	mutex_lock = FUNCTION;
	mutex_trylock = FUNCTION;
	mutex_unlock = FUNCTION;
	open = FUNCTION;
	pause = FUNCTION;
	read = FUNCTION;
	rw_rdlock = FUNCTION;
	rw_tryrdlock = FUNCTION;
	rw_trywrlock = FUNCTION;
	rw_unlock = FUNCTION;
	rw_wrlock = FUNCTION;
	rwlock_init = FUNCTION;
	sema_destroy = FUNCTION;
	sema_init = FUNCTION;
	sema_post = FUNCTION;
	sema_trywait = FUNCTION;
	sema_wait = FUNCTION;
	_getfp = FUNCTION;
	setitimer = FUNCTION;
	siglongjmp = FUNCTION;
	sigsetjmp = FUNCTION;
	sigaction = FUNCTION;
	sigprocmask = FUNCTION;
	sigsuspend = FUNCTION;
	sigwait = FUNCTION;
	sleep = FUNCTION;
	tcdrain = FUNCTION;
	thr_continue = FUNCTION;
	thr_create = FUNCTION;
	thr_exit = FUNCTION;
	thr_getconcurrency = FUNCTION;
	thr_getprio = FUNCTION;
	thr_getspecific = FUNCTION;
	thr_join = FUNCTION;
	thr_keycreate = FUNCTION;
	thr_kill = FUNCTION;
	thr_main = FUNCTION;
	thr_min_stack = FUNCTION;
	thr_self = FUNCTION;
	thr_setconcurrency = FUNCTION;
	thr_setprio = FUNCTION;
	thr_setspecific = FUNCTION;
	thr_sigsetmask = FUNCTION;
	thr_stksegment = FUNCTION;
	thr_suspend = FUNCTION;
	thr_yield = FUNCTION;
	wait = FUNCTION;
	waitpid = FUNCTION;
	write = FUNCTION;
	_mutex_lock = FUNCTION;
};

SUNWprivate_1.1 {
    global:
	_pthread_setcleanupinit = FUNCTION;
	_resume = FUNCTION;
	_resume_ret = FUNCTION;
	thr_probe_setup = FUNCTION;
	_fork = FUNCTION;
	_sigaction = FUNCTION;
	_sigprocmask = FUNCTION;
	_sigsuspend = FUNCTION;
	_sigsetjmp = FUNCTION;
	_siglongjmp = FUNCTION;
	_sleep = FUNCTION;
	_alarm = FUNCTION;
	_setitimer = FUNCTION;
	_mutex_destroy = FUNCTION;
	_mutex_init = FUNCTION;
	_mutex_unlock = FUNCTION;
	_sema_destroy = FUNCTION;
	_thr_create = FUNCTION;
	_thr_getspecific = FUNCTION;
	_thr_join = FUNCTION;
	_thr_keycreate = FUNCTION;
	_thr_self = FUNCTION;
	_thr_setspecific = FUNCTION;
	_thr_main = FUNCTION;
};

